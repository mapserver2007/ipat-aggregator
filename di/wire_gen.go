// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/mapserver2007/ipat-aggregator/app/infrastructure"
	"github.com/mapserver2007/ipat-aggregator/app/service"
	"github.com/mapserver2007/ipat-aggregator/app/usecase"
)

// Injectors from wire.go:

func DataCacheInit() *usecase.DataCache {
	csvReader := service.NewCsvReader()
	raceClient := infrastructure.NewRaceClient()
	raceDB := infrastructure.NewRaceDB(raceClient)
	raceFetcher := service.NewRaceFetcher(raceClient)
	raceConverter := service.NewRaceConverter()
	dataCache := usecase.NewDataCache(csvReader, raceDB, raceFetcher, raceConverter)
	return dataCache
}

func AggregatorInit() *service.Aggregator {
	raceConverter := service.NewRaceConverter()
	bettingTicketConverter := service.NewBettingTicketConverter()
	aggregator := service.NewAggregator(raceConverter, bettingTicketConverter)
	return aggregator
}

func PredictInit() *service.Predictor {
	raceConverter := service.NewRaceConverter()
	bettingTicketConverter := service.NewBettingTicketConverter()
	predictor := service.NewPredictor(raceConverter, bettingTicketConverter)
	return predictor
}

func AnalyzerInit() *usecase.Analyzer {
	raceConverter := service.NewRaceConverter()
	analyzer := service.NewAnalyzer(raceConverter)
	usecaseAnalyzer := usecase.NewAnalyzer(analyzer)
	return usecaseAnalyzer
}
